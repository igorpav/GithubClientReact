{"version":3,"sources":["Components/Header.js","Components/privateRoute.js","Components/Graphql/validation.js","Components/Pages/loginPage.js","Components/Graphql/viewer.js","Components/ViewerRepositories.js","Components/Pages/ProfilePage.js","Components/ViewerInfo.js","Components/MyProfile.js","Components/Pages/RepositoryPageCard.js","Components/Graphql/repos.js","Components/Mutations/Star.js","Components/Search/RepositorySearch.js","Components/Mutations/follow.js","Components/Graphql/user.js","Components/Pages/ProfilePageCard.js","Components/Search/UserSearch.js","Components/NavTabs.js","Components/Pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","logout","position","Toolbar","className","Typography","variant","Button","color","onClick","PrivateRoute","children","token","rest","render","location","to","pathname","state","from","VALIDATION_QUERY","gql","useStyles","makeStyles","theme","root","width","maxwidth","margin","display","justifyContent","paper","marginTop","spacing","flexDirection","alignItems","form","submit","LoginPage","login","classes","useState","setToken","error","setError","useLazyQuery","onCompleted","window","reload","onError","localStorage","removeItem","getData","Grid","container","component","maxWidth","CssBaseline","content","TextField","onChange","e","target","value","required","fullWidth","name","label","type","id","autoComplete","setItem","GET_VIEWER_INFO","flexGrow","title","fontSize","elementList","ViewerRepositories","React","secondary","setSecondary","item","xs","md","FormGroup","row","FormControlLabel","control","Checkbox","checked","event","List","query","viewer","data","loading","CircularProgress","repositories","edges","map","repo","Card","key","node","ListItem","ListItemText","href","url","primary","Link","description","avatar","borderRadius","fontWeight","ProfilePage","entity","info","extended","switchExtended","src","avatarUrl","alt","bio","company","email","moreButton","isViewer","ViewerInfo","panel","flexWrap","userInfo","marginRight","MyProfile","card","boxSizing","details","media","height","flex","cover","controls","paddingLeft","paddingBottom","playIcon","RepositoryPage","addStar","removeStar","CardMedia","image","owner","CardContent","viewerHasStarred","IconButton","aria-label","variables","Star","StarBorder","REPOS_QUERY","ADD_STAR_REPOS","REMOVE_STAR_REPOS","cards","searchButton","RepositorySearch","input","setInput","useMutation","refetchQueries","search","nodes","FOLLOW_USER","UNFOLLOW_USER","GET_USER_INFO","followCard","marginLeft","moreCard","repos","ProfilePageTest","follow","unfollow","CardActionArea","gutterBottom","CardActions","viewerIsFollowing","userId","page","SearchTab","entityName","initialInput","TabPanel","props","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","preventDefault","backgroundColor","palette","background","NavTabs","setValue","Tabs","newValue","mainSection","padding","minWidth","test","cursor","MainPage","App","getItem","updateToken","path","newToken","Boolean","hostname","match","createMuiTheme","grey","A900","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iUAyBeA,EAlBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACE,kBAAC,IAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,UAAU,UACjB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAGA,8BAEE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASR,GAC/B,kBAAC,IAAD,U,gBCGGS,EAlBM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,MAAUC,EAAtB,2CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,gBAAEC,EAAF,EAAEA,SAAF,OACNH,EACED,EAEA,kBAAC,IAAD,CACEK,GAAI,CACFC,SAAU,SACVC,MAAO,CAACC,KAAMJ,W,+LCX1B,IAQeK,EARUC,IAAH,K,QCWhBC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,SACVC,OAAQ,SACRC,QAAS,OACTC,eAAgB,UAElBC,MAAO,CACLC,UAAWR,EAAMS,QAAQ,GACzBJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZT,MAAO,QACPI,eAAgB,UAElBM,KAAM,CACJV,MAAO,OACPM,UAAWR,EAAMS,QAAQ,IAE3BI,OAAQ,CACNT,OAAQJ,EAAMS,QAAQ,EAAG,EAAG,QAIjB,SAASK,EAAT,GAA6B,IAATC,EAAQ,EAARA,MAE3BC,EAAUlB,IAFyB,EAGfmB,mBAAS,IAHM,mBAGlC7B,EAHkC,KAG3B8B,EAH2B,OAIfD,oBAAS,GAJM,mBAIlCE,EAJkC,KAI3BC,EAJ2B,OAKvBC,YAAazB,EAAkB,CAC/C0B,YAAa,WACXF,GAAS,GACTL,EAAM3B,GAENmC,OAAOhC,SAASiC,UAElBC,QAAS,WACPL,GAAS,GACTM,aAAaC,WAzCA,iBAgCVC,EALkC,oBAuBzC,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,SAAS,KAAKpD,UAAWoC,EAAQf,MAChE,kBAACgC,EAAA,EAAD,MACA,yBAAKrD,UAAWoC,EAAQT,MAAO2B,QAAQ,UAErC,kBAACrD,EAAA,EAAD,CAAYkD,UAAU,KAAKjD,QAAQ,MAAnC,WAGA,kBAACqD,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOC,QACnCA,MAAOnD,EACP+B,MAAOA,EACPrC,QAAQ,WACRsB,OAAO,SACPoC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,oBACNC,KAAK,WACLC,GAAG,WACHC,aAAa,qBAEf,kBAAC/D,EAAA,EAAD,CAAQ0D,WAAS,EAAC3D,QAAQ,YAAYE,MAAM,QAAQJ,UAAWoC,EAAQH,OAC/D5B,QA5BG,WACjByC,aAAaqB,QA9CE,aA8CkB3D,GACjCwC,MAyBM,a,6rBCjFV,IA4BeoB,EA5BSnD,IAAH,K,yFCgBfC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJgD,SAAU,EACVzC,UAAW,IAEb0B,QAAS,CACPhC,MAAO,QAETgD,MAAO,CACL9C,OAAQJ,EAAMS,QAAQ,EAAG,EAAG,GAC5B0C,SAAU,IAEZC,YAAa,CACXhD,OAAQ,SACRF,MAAO,YAII,SAASmD,IACtB,IAAMrC,EAAUlB,IAD2B,EAETwD,IAAMrC,UAAS,GAFN,mBAEpCsC,EAFoC,KAEzBC,EAFyB,KAI3C,OACE,yBAAK5E,UAAWoC,EAAQf,MACtB,kBAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,GACvB,kBAACoB,EAAA,EAAD,CAAM4B,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWoC,EAAQkC,OAA5C,gBAGA,kBAACU,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASV,EACTnB,SAAU,SAAA8B,GAAK,OAAIV,EAAaU,EAAM5B,OAAO2B,UAC7C1B,MAAM,YACNvD,MAAM,YAGV2D,MAAM,qBAGV,kBAACwB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOC,MAAOpB,IACX,YAA8B,IAAtBqB,EAAqB,EAA3BC,KACD,OAD4B,EAAbC,UACCF,EACP,kBAACG,EAAA,EAAD,MAGP,oCACGH,EAAOA,OAAOI,aAAaC,MAAMC,KAAI,SAACC,GAAD,OACpC,kBAACC,EAAA,EAAD,CAAMjG,UAAWoC,EAAQoC,YAAa0B,IAAKF,EAAKG,KAAKlC,IACnD,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAMN,EAAKG,KAAKI,IAChBC,QAAS,kBAACC,EAAA,EAAD,CAAMH,KAAMN,EAAKG,KAAKI,KAAMP,EAAKG,KAAKrC,MAC/Ca,UAAWA,EAAYqB,EAAKG,KAAKO,YAAc,oB,sCCnErExF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuF,OAAQ,CACNC,aAAc,KACdtF,MAAO,KAETgD,MAAO,CACLC,SAAU,IAEZmC,YAAa,CACXnC,SAAU,GACVsC,WAAW,SAIA,SAASC,GAAT,GAAsC,IAAhBpB,EAAe,EAAfA,KAAMqB,EAAS,EAATA,OACnC3E,EAAUlB,KAEV8F,EAAOtB,EAAKqB,GAHgC,EAIf1E,oBAAS,GAJM,mBAI3C4E,EAJ2C,KAIjCC,EAJiC,KAMlD,OACE,6BACE,6BACE,yBAAKC,IAAKH,EAAKI,UAAWC,IAAI,SAASrH,UAAWoC,EAAQuE,UAE5D,yBAAK3G,UAAWoC,EAAQ0B,MACtB,wBAAI9D,UAAWoC,EAAQkC,OAAQ0C,EAAKlD,MACpC,uBAAGwC,KAAMU,EAAKT,KACZ,4BAAKS,EAAK7E,SAGb8E,GACD,oCACE,kBAAChH,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,UAAU,IAAInD,UAAWoC,EAAQsE,aAC1DM,EAAKM,KAER,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,UAAU,IAAInD,UAAWoC,EAAQsE,aAC1DM,EAAKN,aAER,kBAACzG,EAAA,EAAD,CAAYC,QAAQ,YAAYiD,UAAU,KAAKnD,UAAWoC,EAAQsE,aAC/DM,EAAKO,SAER,kBAACtH,EAAA,EAAD,CAAYC,QAAQ,UAAUE,MAAM,gBAAgB+C,UAAU,KAAKnD,UAAWoC,EAAQsE,aACnFM,EAAKQ,QAIV,6BACE,6BACE,kBAACrH,EAAA,EAAD,CAAQH,UAAWoC,EAAQqF,WAAYvH,QAAQ,YAAYE,MAAM,UACzDC,QAAS,kBAAO6G,GAAgBD,KACrCA,EAAW,kBAAC,IAAD,MAAa,kBAAC,IAAD,QAG5BD,EAAKU,UACN,kBAACjD,EAAD,QCxDR,IAaekD,GAbI,kBACf,kBAAC,IAAD,CAAOnC,MAAOpB,IACT,YAA8B,IAAtBqB,EAAqB,EAA3BC,KACC,OAD0B,EAAbC,UACGF,EACL,kBAACG,EAAA,EAAD,MAGP,kBAACkB,GAAD,CAAapB,KAAMD,EAAQsB,OAAQ,eCT7C7F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwG,MAAO,CACLnG,QAAS,OACTK,cAAe,SACf+F,SAAU,OACVjG,UAAW,IAEbkG,SAAU,CACRC,YAAa,YAaFC,GATG,WAChB,IAAM5F,EAAUlB,KAChB,OACE,yBAAKlB,UAAWoC,EAAQwF,OACtB,kBAAC,GAAD,CAAY5H,UAAWoC,EAAQ0F,a,kDCR/B5G,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC6G,KAAM,CACFxG,QAAS,OACTD,OAAQ,GACR0G,UAAW,cAEfpE,KAAM,CACFtC,OAAQ,IAEZ2G,QAAS,CACL1G,QAAS,OACTK,cAAe,SACfR,MAAO,KAEX8G,MAAO,CACHC,OAAQ,KAEZ/E,QAAS,CACLgF,KAAM,YAEVC,MAAO,CACHjH,MAAO,KAEXkH,SAAU,CACN/G,QAAS,OACTM,WAAY,SACZ0G,YAAarH,EAAMS,QAAQ,GAC3B6G,cAAetH,EAAMS,QAAQ,IAEjC8G,SAAU,CACNN,OAAQ,GACR/G,MAAO,OAIA,SAASsH,GAAT,GAAsD,IAA7B5C,EAA4B,EAA5BA,KAAM6C,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAC7C1G,EAAUlB,KAChB,OACI,kBAAC+E,EAAA,EAAD,CAAMjG,UAAWoC,EAAQ6F,MACrB,yBAAKjI,UAAWoC,EAAQ+F,SACxB,kBAACY,GAAA,EAAD,CACI/I,UAAWoC,EAAQgG,MACnBY,MAAOhD,EAAKiD,MAAM7B,YAElB,kBAAC8B,GAAA,EAAD,CAAalJ,UAAWoC,EAAQkB,SAC5B,kBAACrD,EAAA,EAAD,CAAYD,UAAWoC,EAAQ0B,KAAMX,UAAU,KAAKjD,QAAQ,MACxD,kBAACuG,EAAA,EAAD,CAAMH,KAAMN,EAAKO,IAAK7C,OAAO,UAA7B,IAAwCsC,EAAKlC,KAA7C,MAEJ,kBAAC7D,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,iBAAtC,SACU,kBAACqG,EAAA,EAAD,CAAMH,KAAMN,EAAKiD,MAAM1C,IAAK7C,OAAO,UAAnC,IAA8CsC,EAAKiD,MAAM9G,MAAzD,MAEV,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,iBAAtC,gBACkB4F,EAAKU,cAG3B,yBAAK1G,UAAWoC,EAAQoG,UAClBxC,EAAKmD,iBAIH,kBAACC,GAAA,EAAD,CAAYC,aAAW,WAAWhJ,QAAS,kBAAOyI,EAAW,CAACQ,UAAW,CAACrF,GAAI+B,EAAK/B,QAC/E,kBAACsF,GAAA,EAAD,OAJJ,kBAACH,GAAA,EAAD,CAAYC,aAAW,WAAWhJ,QAAS,kBAAOwI,EAAQ,CAACS,UAAW,CAACrF,GAAI+B,EAAK/B,QAC5E,kBAACuF,GAAA,EAAD,U,wlBCpE5B,IAsBeC,GAtBKxI,IAAH,M,qbCAV,IAAMyI,GAAiBzI,IAAH,MAUd0I,GAAoB1I,IAAH,M,oBCHxBC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJgD,SAAU,GAEZuF,MAAO,CACLxG,SAAU,cACV3B,QAAS,OACTK,cAAe,MACf+F,SAAU,OACVnG,eAAgB,gBAElB4B,QAAS,CACPhC,MAAO,QAETgD,MAAO,CACL9C,OAAQJ,EAAMS,QAAQ,EAAG,EAAG,IAE9B2C,YAAa,CACXhD,OAAQ,SACRF,MAAO,QAETuI,aAAc,CACZrI,OAAQ,OA8CGsI,GA1CU,WACvB,IAAM1H,EAAUlB,KADa,EAEHmB,mBAAS,IAFN,mBAEtB0H,EAFsB,KAEfC,EAFe,OAGavH,YAAagH,IAH1B,mBAGtBzG,EAHsB,YAGZ2C,EAHY,EAGZA,QAASpD,EAHG,EAGHA,MAAOmD,EAHJ,EAGIA,KAHJ,EAKXuE,YAAYP,GAC5B,CACEQ,eAAgB,CAAC,CAAC1E,MAAOiE,GAAaH,UAAW,CAAChF,MAAOyF,OAFtDlB,EALsB,sBASRoB,YAAYN,GAC/B,CACEO,eAAgB,CAAC,CAAC1E,MAAOiE,GAAaH,UAAW,CAAChF,MAAOyF,OAFtDjB,EATsB,oBAc7B,OACE,yBAAK9I,UAAWoC,EAAQf,MACtB,kBAACkC,EAAA,EAAD,CACEQ,MAAM,kBACNJ,MAAOoG,EACPvG,SAAU,SAACC,GAAD,OAAQuG,EAASvG,EAAEC,OAAOC,UAEtC,kBAACxD,EAAA,EAAD,CAAQD,QAAQ,YAAYE,MAAM,UAAUJ,UAAWoC,EAAQyH,aACvDxJ,QAAS,kBAAO2C,EAAQ,CAACsG,UAAW,CAAChF,MAAOyF,OAClD,kBAAC,KAAD,OAEDxH,GACC,yCAEDoD,GACC,kBAACC,EAAA,EAAD,MAEDF,GACC,yBAAK1F,UAAWoC,EAAQwH,OACrBlE,EAAKyE,OAAOC,MAAMrE,KAAI,SAACI,GAAD,OACrB,kBAACyC,GAAD,CAAoB5C,KAAMG,EAAMD,IAAKC,EAAKlC,GAAI4E,QAASA,EAASC,WAAYA,U,0mBCnEjF,IAAMuB,GAAcpJ,IAAH,MAWXqJ,GAAgBrJ,IAAH,M,wXCX1B,IAmBesJ,GAnBOtJ,IAAH,MCgBbC,GAAYC,YAAW,CAC3B8G,KAAM,CACJrG,UAAW,IACXwB,SAAU,KAEZgF,MAAO,CACLC,OAAQ,KAEVmC,WAAY,CACVC,WAAY,KAEdC,SAAU,CACRD,WAAY,IAEdtI,MAAO,CACLP,UAAW,IAEb+I,MAAO,KAKM,SAASC,GAAT,GAA0C,IAAhBlF,EAAe,EAAfA,KAAMqB,EAAS,EAATA,OACvC3E,EAAUlB,KAEV8F,EAAOtB,EAAKqB,GAHoC,EAInB1E,oBAAS,GAJU,mBAI/C4E,EAJ+C,KAIrCC,EAJqC,OAKrC+C,YAAYI,GAC3B,CACEH,eAAgB,CAAC,CAAC1E,MAAO+E,GAAejB,UAAW,CAACnH,MAAO6E,EAAK7E,WAF7D0I,EAL+C,sBASnCZ,YAAYK,GAC7B,CACEJ,eAAgB,CAAC,CAAC1E,MAAO+E,GAAejB,UAAW,CAACnH,MAAO6E,EAAK7E,WAF7D2I,EAT+C,oBActD,OACE,kBAAC7E,EAAA,EAAD,CAAMjG,UAAWoC,EAAQ6F,MACvB,kBAAC8C,GAAA,EAAD,KACE,kBAAChC,GAAA,EAAD,CACE/I,UAAWoC,EAAQgG,MACnBY,MAAOhC,EAAKI,UACZ9C,MAAM,WAER,kBAAC4E,GAAA,EAAD,KACE,kBAACjJ,EAAA,EAAD,CAAY+K,cAAY,EAAC9K,QAAQ,KAAKiD,UAAU,MAC9C,4BAAK6D,EAAKlD,MACV,kBAAC7D,EAAA,EAAD,CAAYD,UAAWoC,EAAQD,OAC/B,uBAAGmE,KAAMU,EAAKT,IAAKvC,KAAK,UACpB,4BAAKgD,EAAK7E,UAIf8E,GACC,oCACE,kBAAChH,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,UAAU,KACnC6D,EAAKM,KAER,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,UAAU,KACnC6D,EAAKN,aAER,kBAACzG,EAAA,EAAD,CAAYC,QAAQ,YAAYiD,UAAU,MACvC6D,EAAKO,SAER,kBAACtH,EAAA,EAAD,CAAYC,QAAQ,WAAWiD,UAAU,MACtC6D,EAAKrG,UAER,kBAACV,EAAA,EAAD,CAAYC,QAAQ,UAAUE,MAAM,gBAAgB+C,UAAU,MAC3D6D,EAAKQ,UAMhB,kBAACyD,GAAA,EAAD,KACA,6BACE,6BACI,kBAAC9K,EAAA,EAAD,CAAQD,QAAQ,YAAYE,MAAM,UAAUJ,UAAWoC,EAAQsI,SAC3DrK,QAAS,kBAAO6G,GAAgBD,KACnCA,EAAW,kBAAC,IAAD,MAAc,kBAAC,IAAD,QAExBD,EAAKU,UACP,kBAACvH,EAAA,EAAD,CAAQD,QAAQ,YAAaE,MAAM,UAAUJ,UAAWoC,EAAQoI,WACxDnK,QAAS,kBAAO2G,EAAKkE,kBACjBJ,EAAS,CAACxB,UAAW,CAAC6B,OAAQnE,EAAK/C,MAEnC4G,EAAO,CAACvB,UAAW,CAAC6B,OAAQnE,EAAK/C,QACxC+C,EAAKkE,kBAAoB,kBAAC,KAAD,MAA2B,kBAAC,KAAD,QAI3D,yBAAKlL,UAAWoC,EAAQuI,OACrB3D,EAAKU,UACN,kBAACjD,EAAD,UCvGZ,IAAMvD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJgD,SAAU,EACV5C,QAAS,QAEX2J,KAAM,CACJ3J,QAAS,OACTK,cAAe,UAEjBwB,QAAS,CACPhC,MAAO,QAGTgD,MAAO,CACL9C,OAAQJ,EAAMS,QAAQ,EAAG,EAAG,IAG9B2C,YAAa,CACXhD,OAAQ,SACRF,MACE,QAGJuI,aAAc,CACZrI,OAAQ,OAKC,SAAS6J,GAAT,GAA8D,IAA1C7F,EAAyC,EAAzCA,MAAc8F,GAA2B,EAAlChH,MAAkC,EAA3BgH,YAAYC,EAAe,EAAfA,aACrDnJ,EAAUlB,KAD0D,EAEhCuB,YAAa+C,GAFmB,mBAEnExC,EAFmE,YAEzD2C,EAFyD,EAEzDA,QAASpD,EAFgD,EAEhDA,MAAOmD,EAFyC,EAEzCA,KAFyC,EAGhDrD,mBAASkJ,GAHuC,mBAGnExB,EAHmE,KAG5DC,EAH4D,KAK1E,OACE,yBAAKhK,UAAWoC,EAAQf,MACtB,kBAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,GACvB,kBAACoB,EAAA,EAAD,CAAM4B,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI/E,UAAWoC,EAAQgJ,MAC5C,yBAAKpL,UAAWoC,EAAQ+H,QACtB,kBAAC5G,EAAA,EAAD,CACEU,GAAG,iBACHF,MAAM,aACNJ,MAAOoG,EACPvG,SAAU,SAACC,GAAD,OAAQuG,EAASvG,EAAEC,OAAOC,UAEtC,kBAACxD,EAAA,EAAD,CAAQD,QAAQ,YAAYE,MAAM,UAAUJ,UAAWoC,EAAQyH,aACvDxJ,QAAS,kBAAO2C,EAAQ,CAACsG,UAAW,CAACnH,MAAO4H,OAClD,kBAAC,KAAD,QAGHxH,GACC,yCAEDoD,GACC,kBAACC,EAAA,EAAD,MAEDF,GACC,kBAACkF,GAAD,CAAiBlF,KAAMA,EAAMqB,OAAQuE,OCvDjD,SAASE,GAASC,GAAQ,IACjBlL,EAAoCkL,EAApClL,SAAUoD,EAA0B8H,EAA1B9H,MAAO+H,EAAmBD,EAAnBC,MAAUC,EADX,YACoBF,EADpB,8BAGvB,OACE,kBAACxL,EAAA,EAAD,eACED,UAAU,QACVmD,UAAU,MACVyI,KAAK,WACLC,OAAQlI,IAAU+H,EAClBzH,GAAE,uBAAkByH,GACpBI,kBAAA,kBAA4BJ,IACxBC,GAEHhI,IAAU+H,GAAS,kBAACK,EAAA,EAAD,CAAKC,EAAG,GAAIzL,IAWtC,SAAS0L,GAAUP,GACjB,MAAO,CACLzH,GAAG,WAAD,OAAayH,GACf,gBAAgB,gBAAhB,OAAiCA,IAIrC,SAASQ,GAAQT,GACf,OACE,kBAACU,EAAA,EAAD,eACEhJ,UAAU,IACV9C,QAAS,SAAAiF,GACPA,EAAM8G,mBAEJX,IAKV,IAAMvK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJgD,SAAU,EACVgI,gBAAiBjL,EAAMkL,QAAQC,WAAW5K,WAI/B,SAAS6K,KACtB,IAAMpK,EAAUlB,KADgB,EAENwD,IAAMrC,SAAS,GAFT,mBAEzBsB,EAFyB,KAElB8I,EAFkB,KAQhC,OACE,yBAAKzM,UAAWoC,EAAQf,MACtB,kBAAC,IAAD,CAAQvB,SAAS,SAASM,MAAO,WAC/B,kBAACsM,EAAA,EAAD,CACExM,QAAQ,YACRyD,MAAOA,EACPH,SAVa,SAAC8B,EAAOqH,GAC3BF,EAASE,IAUHtD,aAAW,oBAEX,kBAAC6C,GAAD,eAASnI,MAAM,aAAauC,KAAK,eAAkB2F,GAAU,KAC7D,kBAACC,GAAD,eAASnI,MAAM,oBAAoBuC,KAAK,iBAAoB2F,GAAU,KACtE,kBAACC,GAAD,eAASnI,MAAM,YAAYuC,KAAK,UAAa2F,GAAU,OAG3D,kBAACT,GAAD,CAAU7H,MAAOA,EAAO+H,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAACF,GAAD,CAAU7H,MAAOA,EAAO+H,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAACF,GAAD,CAAU7H,MAAOA,EAAO+H,MAAO,GAC7B,kBAAC,GAAD,CAAYlG,MAAO+E,GAAejG,MAAO,eAAgBgH,WAAY,OAAQC,aAAc,OCpFnG,IAAMrK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCwL,YAAa,CACTnL,QAAS,OACTC,eAAgB,SAChBmL,QAAS,UAEbvJ,QAAS,CACLwJ,SAAU,OACVzE,OAAQ,KAEZ0E,KAAM,CACFC,OAAQ,eAeDC,GAXE,WACb,IAAM7K,EAAUlB,KAChB,OACI,yBAAKlB,UAAWoC,EAAQwK,aACpB,yBAAK5M,UAAWoC,EAAQkB,SACpB,kBAACkJ,GAAD,SCcDU,GA7BH,WAAO,IAAD,EAEW7K,mBAASS,aAAaqK,QAJhC,eAED,mBAEX3M,EAFW,KAEJ4M,EAFI,KAchB,OACE,6BACE,kBAAC,IAAD,CAAUrM,KAAK,IAAIH,GAAG,KACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyM,KAAK,UACV,kBAAC,EAAD,CAAWlL,MAfL,SAACmL,GACbxK,aAAaqB,QAPE,aAOkBmJ,GACjCF,EAAYtK,aAAaqK,QARV,mBAuBX,kBAAC,EAAD,CAAcE,KAAK,GAAG7M,MAAOA,GAC3B,kBAAC,EAAD,CAAQA,MAAOA,EAAOX,OAbf,WACbiD,aAAaC,WAZE,cAafqK,EAAYtK,aAAaqK,QAbV,kBAyBT,kBAAC,GAAD,UCrBUI,QACW,cAA7B5K,OAAOhC,SAAS6M,UAEe,UAA7B7K,OAAOhC,SAAS6M,UAEhB7K,OAAOhC,SAAS6M,SAASC,MACvB,2D,sGCJArM,GAAQsM,aAAe,CAC3BpB,QAAS,CACP9F,QAASmH,KACThJ,UAAWgJ,KAAKC,QAMdC,GAAWC,aAAe,CAC9BC,IAAK,mCAGDC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1B3N,EAAQsC,aAAaqK,QAPV,cAQjB,MAAO,CACLgB,QAAQ,eACHA,EADE,CAELC,cAAe5N,EAAK,iBAAaA,GAAU,SAK3C6N,GAAS,IAAIC,KAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,OAIbC,IAASjO,OACP,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAgB2N,OAAQA,IACtB,kBAAC,KAAD,CAAkBjN,MAAOA,IACvB,kBAAC,GAAD,SAINwN,SAASC,eAAe,SD8EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dabb1a79.chunk.js","sourcesContent":["import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport React from \"react\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst Header = ({logout}) => {\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className=\"header\">\n        <Typography variant=\"h6\">\n          Github Client\n        </Typography>\n        <div>\n        </div>\n          <Button color=\"inherit\" onClick={logout}>\n            <ExitToAppIcon/>\n          </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import {Redirect, Route} from \"react-router\";\nimport React from \"react\";\n\nconst PrivateRoute = ({children, token, ...rest}) => (\n  <Route\n    {...rest}\n    render={({location}) =>\n      token ? (\n        children\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: {from: location}\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import gql from \"graphql-tag\";\n\nconst VALIDATION_QUERY = gql`\n    {\n        viewer {\n            id\n        }\n    }\n`;\n\nexport default VALIDATION_QUERY;\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport {Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VALIDATION_QUERY from \"../Graphql/validation\";\nimport {useLazyQuery} from \"@apollo/react-hooks\";\n//import logo from '../iconHub.png';\n\nconst AUTH_TOKEN = 'auth-token';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxwidth: '1200px',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '700px',\n    justifyContent: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function LoginPage({login}) {\n  //let history = useHistory();\n  const classes = useStyles();\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [getData] = useLazyQuery(VALIDATION_QUERY, {\n    onCompleted: () => {\n      setError(false);\n      login(token);\n      //history.push(``);\n      window.location.reload();\n    },\n    onError: () => {\n      setError(true);\n      localStorage.removeItem(AUTH_TOKEN);\n    }\n  });\n\n  const validation = () => {\n    localStorage.setItem(AUTH_TOKEN, token);\n    getData();\n  };\n\n  return (\n    <Grid container component=\"main\" maxWidth=\"xs\" className={classes.root}>\n      <CssBaseline />\n      <div className={classes.paper} content=\"center\">\n        {/* <img src={logo} alt=\"github_client\"></img> */}\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <TextField\n            onChange={(e) => setToken(e.target.value)}\n            value={token}\n            error={error}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Token from github\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button fullWidth variant=\"contained\" color=\"black\" className={classes.submit}\n                  onClick={validation}>\n            Sign In\n          </Button>\n      </div>\n    </Grid>\n  );\n}\n\n","import gql from \"graphql-tag\";\n\nconst GET_VIEWER_INFO = gql`\n    {\n        viewer {\n            name,\n            isViewer,\n            login,\n            avatarUrl,\n            url,\n            bio,\n            email,\n            company,\n            repositories (first: 5) {\n                edges {\n                    node {\n                        id,\n                        name,\n                        isPrivate,\n                        description,\n                        pushedAt,\n                        createdAt,\n                        url\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default GET_VIEWER_INFO;\n\n","import React from 'react';\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Typography,\n  Card,\n  CircularProgress,\n  Link,\n} from '@material-ui/core';\nimport GET_VIEWER_INFO from \"./Graphql/viewer\";\nimport {Query} from \"@apollo/react-components\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 25,\n  },\n  content: {\n    width: \"100%\"\n  },\n  title: {\n    margin: theme.spacing(1, 0, 2),\n    fontSize: 25,\n  },\n  elementList: {\n    margin: \"10px 0\",\n    width: \"100%\"\n  }\n}));\n\nexport default function ViewerRepositories() {\n  const classes = useStyles();\n  const [secondary, setSecondary] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12}>\n          <Typography variant=\"h4\" className={classes.title}>\n            Repositories\n          </Typography>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={secondary}\n                  onChange={event => setSecondary(event.target.checked)}\n                  value=\"secondary\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Add description\"\n            />\n          </FormGroup>\n          <List>\n            <Query query={GET_VIEWER_INFO}>\n              {({data: viewer, loading}) => {\n                if (loading || !viewer) {\n                  return <CircularProgress/>;\n                }\n                return (\n                  <>\n                    {viewer.viewer.repositories.edges.map((repo) => (\n                      <Card className={classes.elementList} key={repo.node.id}>\n                        <ListItem>\n                          <ListItemText\n                            href={repo.node.url}\n                            primary={<Link href={repo.node.url}>{repo.node.name}</Link>}\n                            secondary={secondary ? repo.node.description : null}\n                          />\n                        </ListItem>\n                      </Card>\n                    ))}\n                  </>\n                )\n              }}\n            </Query>\n          </List>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport ViewerRepositories from \"../ViewerRepositories\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    borderRadius: \"3%\",\n    width: 200,  \n  },\n  title: {\n    fontSize: 20,\n  },\n  description: {\n    fontSize: 15,\n    fontWeight:700,\n  },\n}));\n\nexport default function ProfilePage({data, entity}) {\n  const classes = useStyles();\n \n  const info = data[entity];\n  const [extended, switchExtended] = useState(false);\n  \n  return (\n    <div>\n      <div>\n        <img src={info.avatarUrl} alt=\"Avatar\" className={classes.avatar}/>\n      </div>\n      <div className={classes.name}>\n        <h3 className={classes.title}>{info.name}</h3>\n        <a href={info.url}>\n          <h4>{info.login}</h4>\n        </a>\n      </div>\n      {extended && \n      <>\n        <Typography variant=\"body2\" component=\"p\" className={classes.description}> \n          {info.bio}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" className={classes.description}> \n          {info.description}\n        </Typography>\n        <Typography variant=\"subtitle2\" component=\"h4\" className={classes.description}> \n          {info.company}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\" component=\"h6\" className={classes.description}> \n          {info.email}\n        </Typography>\n      </>\n      }\n      <div>\n        <div>\n          <Button className={classes.moreButton} variant=\"contained\" color=\"primary\"\n                  onClick={() => (switchExtended(!extended))}>\n            {extended ? <HelpIcon/> :<HelpOutlineIcon/>}\n          </Button>\n        </div>\n        {info.isViewer &&\n        <ViewerRepositories/>\n        }\n      </div> \n    </div>\n  );\n}\n","import React from \"react\";\nimport GET_VIEWER_INFO from \"./Graphql/viewer\";\nimport {Query} from \"@apollo/react-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ProfilePage from \"./Pages/ProfilePage\";\n\nconst ViewerInfo = () => (\n    <Query query={GET_VIEWER_INFO}>\n        {({data: viewer, loading}) => {\n            if (loading || !viewer) {\n                return <CircularProgress />;\n            }\n            return (\n                <ProfilePage data={viewer} entity={\"viewer\"}/>\n            )\n        }}\n    </Query>\n);\n\nexport default ViewerInfo;\n","import React from \"react\";\nimport ViewerInfo from \"./ViewerInfo\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  panel: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    marginTop: 30\n  },\n  userInfo: {\n    marginRight: \"50px\"\n  }\n}));\n\nconst MyProfile = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.panel}>\n      <ViewerInfo className={classes.userInfo}/>\n    </div>\n  )\n};\n\nexport default MyProfile;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Star, StarBorder} from \"@material-ui/icons\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n  Link\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        margin: 16,\n        boxSizing: \"border-box\",\n    },\n    name: {\n        margin: 30,\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 200\n    },\n    media: {\n        height: 240,\n      },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 3,\n    },\n}));\n\nexport default function RepositoryPage({repo, addStar, removeStar}) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <div className={classes.details}>\n            <CardMedia\n                className={classes.media}\n                image={repo.owner.avatarUrl}\n            />\n                <CardContent className={classes.content}>\n                    <Typography className={classes.name} component=\"h5\" variant=\"h5\">\n                        <Link href={repo.url} target=\"_blank\"> {repo.name} </Link>\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Login:<Link href={repo.owner.url} target=\"_blank\"> {repo.owner.login} </Link>\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        Description: {repo.description}\n                    </Typography>\n                </CardContent>\n                <div className={classes.controls}>\n                    {!repo.viewerHasStarred ?\n                        <IconButton aria-label=\"previous\" onClick={() => (addStar({variables: {id: repo.id}}))}>\n                            <StarBorder/>\n                        </IconButton> :\n                        <IconButton aria-label=\"previous\" onClick={() => (removeStar({variables: {id: repo.id}}))}>\n                            <Star/>\n                        </IconButton>\n                    }\n                </div>\n            </div>\n            \n        </Card>\n    );\n}\n","import gql from \"graphql-tag\";\n\nconst REPOS_QUERY = gql`\n    query repos($title: String!) {\n        search(query: $title, type: REPOSITORY, first: 8) {\n            nodes {\n                ... on Repository {\n                    id,\n                    name,\n                    url,\n                    viewerHasStarred,\n                    description,\n                    \n                    owner {\n                        login\n                        url\n                        avatarUrl\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default REPOS_QUERY;\n","import gql from \"graphql-tag\";\n\nexport const ADD_STAR_REPOS = gql`\n    mutation addStar($id: ID!){\n        addStar(input: {starrableId : $id}) {\n            starrable {\n                id\n            }\n        }\n    }\n`;\n\nexport const REMOVE_STAR_REPOS = gql`\nmutation addStar($id: ID!){\n    removeStar(input: {starrableId : $id}) {\n        starrable {\n            id\n        }\n    }\n}\n`;\n","import React, {useState} from \"react\";\nimport {Button, makeStyles, TextField } from \"@material-ui/core\";\nimport RepositoryPageCard from \"../Pages/RepositoryPageCard\";\nimport {useLazyQuery, useMutation} from \"@apollo/react-hooks\";\nimport REPOS_QUERY from \"../Graphql/repos\";\nimport { ADD_STAR_REPOS, REMOVE_STAR_REPOS }from \"../Mutations/Star\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  cards: {\n    maxWidth: \"fit-content\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\"\n  },\n  content: {\n    width: \"100%\"\n  },\n  title: {\n    margin: theme.spacing(1, 0, 2),\n  },\n  elementList: {\n    margin: \"10px 0\",\n    width: \"100%\"\n  },\n  searchButton: {\n    margin: 8\n  },\n}));\n\nconst RepositorySearch = () => {\n  const classes = useStyles();\n  const [input, setInput] = useState(\"\");\n  const [getData, {loading, error, data}] = useLazyQuery(REPOS_QUERY);\n\n  const [addStar] = useMutation(ADD_STAR_REPOS,\n    {\n      refetchQueries: [{query: REPOS_QUERY, variables: {title: input}}]\n    });\n  const [removeStar] = useMutation(REMOVE_STAR_REPOS,\n    {\n      refetchQueries: [{query: REPOS_QUERY, variables: {title: input}}]\n    });\n\n  return (\n    <div className={classes.root}>\n      <TextField \n        label=\"Repository name\" \n        value={input} \n        onChange={(e) => (setInput(e.target.value))}\n      />\n      <Button variant=\"contained\" color=\"primary\" className={classes.searchButton}\n              onClick={() => (getData({variables: {title: input}}))}>\n        <SearchIcon/> \n      </Button>\n      {error && (\n        <h5>Not found</h5>\n      )}\n      {loading && (\n        <CircularProgress/>\n      )}\n      {data && (\n        <div className={classes.cards}>\n          {data.search.nodes.map((node) => (\n            <RepositoryPageCard repo={node} key={node.id} addStar={addStar} removeStar={removeStar}/>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n};\n\nexport default RepositorySearch;\n","import gql from \"graphql-tag\";\n\nexport const FOLLOW_USER = gql`\n    mutation ($userId: ID!) {\n        followUser(input: {userId: $userId}) {\n            clientMutationId,\n            user {\n                viewerIsFollowing\n            }\n        }\n    }\n`;\n\nexport const UNFOLLOW_USER = gql`\n    mutation unfollowUser($userId: ID!) {\n        unfollowUser(input: {userId: $userId}) {\n            clientMutationId,\n            user {\n                viewerIsFollowing\n            }\n        }\n    }\n`\n","import gql from \"graphql-tag\";\n\nconst GET_USER_INFO = gql`\n    query user($login: String!)\n    {\n        user(login: $login) {\n            id,\n            name,\n            login,\n            avatarUrl,\n            url,\n            bio,\n            company,\n            email,\n            isViewer,\n            viewerIsFollowing\n        }\n    }\n\n`;\n\nexport default GET_USER_INFO;\n\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ViewerRepositories from \"../ViewerRepositories\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport { FOLLOW_USER, UNFOLLOW_USER } from \"../Mutations/follow\";\r\nimport GET_USER_INFO from \"../Graphql/user\";\r\nimport {useMutation} from \"@apollo/react-hooks\";\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    marginTop: 100,\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 240,\r\n  },\r\n  followCard: {\r\n    marginLeft: 150,\r\n  },\r\n  moreCard: {\r\n    marginLeft: 20,\r\n  },\r\n  login: {\r\n    marginTop: 10,\r\n  },\r\n  repos: {\r\n    \r\n  }\r\n});\r\n\r\nexport default function ProfilePageTest({data, entity}) {\r\n  const classes = useStyles();\r\n\r\n  const info = data[entity];\r\n  const [extended, switchExtended] = useState(false);\r\n  const [follow] = useMutation(FOLLOW_USER,\r\n    {\r\n      refetchQueries: [{query: GET_USER_INFO, variables: {login: info.login}}]\r\n    });\r\n  const [unfollow] = useMutation(UNFOLLOW_USER,\r\n    {\r\n      refetchQueries: [{query: GET_USER_INFO, variables: {login: info.login}}]\r\n    });\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={info.avatarUrl}\r\n          title=\"Avatar\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            <h3>{info.name}</h3>\r\n            <Typography className={classes.login}>\r\n            <a href={info.url} type=\"_blank\">\r\n                <h4>{info.login}</h4>\r\n            </a>\r\n            </Typography>\r\n          </Typography>\r\n          {extended &&\r\n            <>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {info.bio}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {info.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" component=\"h4\">\r\n                {info.company}\r\n              </Typography>\r\n              <Typography variant=\"overline\" component=\"h5\">\r\n                {info.location}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\" component=\"h6\">\r\n                {info.email}\r\n              </Typography>\r\n            </>\r\n            }\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n      <div>\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.moreCard}\r\n                onClick={() => (switchExtended(!extended))}>\r\n            {extended ? <HelpIcon/> : <HelpOutlineIcon/>}\r\n            </Button>\r\n            {!info.isViewer &&\r\n            <Button variant=\"contained\"  color=\"primary\" className={classes.followCard}\r\n                    onClick={() => (info.viewerIsFollowing ?\r\n                        unfollow({variables: {userId: info.id}})\r\n                        :\r\n                        follow({variables: {userId: info.id}}))}>\r\n                {info.viewerIsFollowing ? <PersonAddDisabledIcon/> : <PersonAddIcon/>}\r\n            </Button>\r\n            }\r\n        </div>\r\n          <div className={classes.repos}>\r\n            {info.isViewer &&\r\n            <ViewerRepositories/>\r\n            }\r\n          </div>\r\n      </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Grid, TextField, Button} from '@material-ui/core';\nimport {useLazyQuery} from \"@apollo/react-hooks\";\nimport ProfilePageTest from \"../Pages/ProfilePageCard\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      display: \"flex\"\n    },\n    page: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      width: \"100%\"\n    }\n    ,\n    title: {\n      margin: theme.spacing(1, 0, 2),\n    }\n    ,\n    elementList: {\n      margin: \"10px 0\",\n      width:\n        \"100%\"\n    }\n    ,\n    searchButton: {\n      margin: 8\n    }\n  }))\n;\n\nexport default function SearchTab({query, title, entityName, initialInput}) {\n  const classes = useStyles();\n  const [getData, {loading, error, data}] = useLazyQuery(query);\n  const [input, setInput] = useState(initialInput);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} className={classes.page}>\n          <div className={classes.search}>\n            <TextField \n              id=\"outlined-basic\" \n              label=\"User login\" \n              value={input} \n              onChange={(e) => (setInput(e.target.value))}\n            />\n            <Button variant=\"contained\" color=\"primary\" className={classes.searchButton}\n                    onClick={() => (getData({variables: {login: input}}))}>\n              <SearchIcon/> \n            </Button>\n          </div>\n          {error && (\n            <h5>Not found</h5>\n          )}\n          {loading && (\n            <CircularProgress />\n          )}\n          {data && (\n            <ProfilePageTest data={data} entity={entityName} />\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Box, Typography} from '@material-ui/core';\nimport MyProfile from \"./MyProfile\";\nimport RepositorySearch from \"./Search/RepositorySearch\";\nimport UserSearch from \"./Search/UserSearch\";\nimport GET_USER_INFO from \"./Graphql/user\";\n//import ProfilePageTest from \"./Pages/ProfilePageTest\"\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <Typography\n      className=\"repos\"\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function NavTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color={\"default\"}>\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"My profile\" href=\"/my_profile\" {...a11yProps(0)} />\n          <LinkTab label=\"Repository search\" href=\"/repositories\" {...a11yProps(1)} />\n          <LinkTab label=\"Find user\" href=\"/users\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <MyProfile/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <RepositorySearch/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <UserSearch query={GET_USER_INFO} title={\"Search users\"} entityName={\"user\"} initialInput={\"\"}/>\n      </TabPanel>\n    </div>\n  );\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport NavTabs from \"../NavTabs\";\n\n\nconst useStyles = makeStyles(theme => ({\n    mainSection: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px 0\"\n    },\n    content: {\n        minWidth: \"90vw\",\n        height: 700\n    },\n    test: {\n        cursor: \"pointer\"\n    }\n}));\n\nconst MainPage = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.mainSection}>\n            <div className={classes.content}>\n                <NavTabs/>\n            </div>\n        </div>\n)\n};\n\nexport default MainPage;\n","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport PrivateRoute from \"./Components/privateRoute\";\nimport LaginPage from \"./Components/Pages/loginPage\";\nimport MainPage from \"./Components/Pages/MainPage\";\n\nconst AUTH_TOKEN = 'auth-token';\n\nconst App = () => {\n\n  let [token, updateToken] = useState(localStorage.getItem(AUTH_TOKEN));\n\n  const login = (newToken) => {\n    localStorage.setItem(AUTH_TOKEN, newToken);\n    updateToken(localStorage.getItem(AUTH_TOKEN));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(AUTH_TOKEN);\n    updateToken(localStorage.getItem(AUTH_TOKEN));\n  };\n\n  return (\n    <div>\n      <Redirect from=\"/\" to=\"\" />\n      <Switch>\n        <Route path=\"/login\">\n          <LaginPage login={login}/>\n        </Route>\n        <PrivateRoute path=\"\" token={token}>\n          <Header token={token} logout={logout}/>\n          <MainPage/>\n        </PrivateRoute>\n      </Switch>\n    </div>\n  )};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {setContext} from \"apollo-link-context\";\nimport { ApolloClient } from 'apollo-client';\nimport {createHttpLink} from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport grey from \"@material-ui/core/colors/grey\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: grey,\n    secondary: grey.A900,\n    },\n});\n\nconst AUTH_TOKEN = 'auth-token';\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\"),\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}